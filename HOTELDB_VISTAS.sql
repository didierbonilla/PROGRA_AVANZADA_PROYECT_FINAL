CREATE VIEW VW_HABITACIONES AS 
SELECT DISTINCT
	HAB.HABITACION_CODIGO, CAT.CATEGORIA_CODIGO, CAT.CATEGORIA_NOMBRE, HAB.PISO, HAB.NUMERO, HAB.CAPACIDAD, HAB.PRECIO,
	CASE WHEN RES.RESERVA_ID IS NOT NULL THEN 'Y' ELSE 'N' END AS RESERVADA
FROM TBL_HABITACIONES AS HAB
INNER JOIN TBL_CATEGORIAS_HABITACIONES AS CAT ON CAT.CATEGORIA_CODIGO = HAB.CATEGORIA_CODIGO
LEFT JOIN TBL_RESERVAS AS RES ON RES.HABITACION_CODIGO = HAB.HABITACION_CODIGO AND GETDATE() BETWEEN FECHA_ENTRADA AND FECHA_SALIDA 
GO

CREATE VIEW VW_CATEGORIAS_HABITACIONES AS
SELECT
	CAT.CATEGORIA_CODIGO, CAT.CATEGORIA_NOMBRE, 
	COUNT(HAB.HABITACION_CODIGO) AS HABITACIONES,
	ISNULL(SUM(CASE WHEN HAB.RESERVADA = 'N' THEN 1 END), COUNT(HAB.HABITACION_CODIGO)) AS HABITACIONES_DISPONIBLES
FROM TBL_CATEGORIAS_HABITACIONES AS CAT
LEFT JOIN VW_HABITACIONES AS HAB ON HAB.CATEGORIA_CODIGO = CAT.CATEGORIA_CODIGO
GROUP BY CAT.CATEGORIA_CODIGO, CAT.CATEGORIA_NOMBRE
GO

CREATE VIEW VW_RESERVACIONES AS 
SELECT DISTINCT
	RES.RESERVA_ID, CONVERT(DATE, RES.FECHA_CREACION) AS FECHA_CREACION,
	HAB.HABITACION_CODIGO, CAT.CATEGORIA_CODIGO, CAT.CATEGORIA_NOMBRE, HAB.PISO, HAB.NUMERO, HAB.CAPACIDAD,
	RES.DNI, RES.NOMBRE_CLIENTE, RES.FECHA_ENTRADA, RES.FECHA_SALIDA, RES.PRECIO, RES.DIAS, RES.TOTAL, RES.TIPO_PAGO,
	CASE 
		WHEN GETDATE() < FECHA_ENTRADA THEN 'VIGENTE' 
		WHEN GETDATE() > FECHA_SALIDA THEN 'VENCIDA'
		ELSE 'EN PROCESO'
	END AS ESTADO
FROM TBL_RESERVAS AS RES
INNER JOIN TBL_HABITACIONES AS HAB ON RES.HABITACION_CODIGO = HAB.HABITACION_CODIGO
INNER JOIN TBL_CATEGORIAS_HABITACIONES AS CAT ON CAT.CATEGORIA_CODIGO = HAB.CATEGORIA_CODIGO
WHERE RES.ANULADA = 'N'
GO

